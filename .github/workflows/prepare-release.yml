name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.2.0)'
        required: true
        type: string

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Validate version format
        run: |
          if [[ ! "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format x.y.z (e.g., 0.2.0)"
            exit 1
          fi

      - name: Check if version already exists
        run: |
          if git tag | grep -q "^v${{ github.event.inputs.version }}$"; then
            echo "Error: Version ${{ github.event.inputs.version }} already exists"
            exit 1
          fi

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Update all versions
        run: |
          chmod +x .github/scripts/update-version.sh
          .github/scripts/update-version.sh ${{ github.event.inputs.version }}

      - name: Verify git status
        run: |
          echo "=== Git Status ==="
          git status
          echo "=== Git Diff ==="
          git diff

      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: bump version to ${{ github.event.inputs.version }}"
          branch: release/v${{ github.event.inputs.version }}
          base: master
          title: "Release v${{ github.event.inputs.version }}"
          body: |
            ## Release v${{ github.event.inputs.version }}

            This PR prepares the release for version ${{ github.event.inputs.version }}.

            ### Changes
            - Updated version in package.json
            - Updated version in Cargo.toml
            - Updated version in tauri.conf.json
            - Updated Cargo.lock

            ### Next Steps
            - Review the changes
            - Merge this PR to trigger the release workflow
            - The release workflow will automatically build and publish the app

            **‚ö†Ô∏è Merging this PR will trigger an automatic release!**

      - name: Check PR creation result
        run: |
          echo "PR Number: ${{ steps.create-pr.outputs.pull-request-number }}"
          echo "PR URL: ${{ steps.create-pr.outputs.pull-request-url }}"
          if [ "${{ steps.create-pr.outputs.pull-request-number }}" != "" ]; then
            echo "‚úÖ Pull Request created successfully!"
            echo "üîó ${{ steps.create-pr.outputs.pull-request-url }}"
          else
            echo "‚ùå Failed to create Pull Request"
            exit 1
          fi
